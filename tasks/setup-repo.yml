---
- name: Ensure gpg is installed
  ansible.builtin.apt:
    name: gpg
    state: present
    update_cache: true

- name: Create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: hpe_keys
  register: temp_dir
  changed_when: false

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download HPE keys
  ansible.builtin.get_url:
    url: "{{ hpe_mcp_pkgs_keys_base_url }}/{{ item }}"
    dest: "{{ temp_dir.path }}/{{ item }}"
    mode: '0644'
  loop: "{{ hpe_mcp_pkgs_key_files }}"
  changed_when: false

- name: Check if keyring exists
  ansible.builtin.stat:
    path: "{{ hpe_mcp_pkgs_keyring_file }}"
  register: keyring_file

- name: Create hpe keyring file
  ansible.builtin.shell: >-
    {% if ansible_loop.first %}
    gpg --dearmor < {{ temp_dir.path }}/{{ hpe_mcp_pkgs_key_files[0] }} > {{ hpe_mcp_pkgs_keyring_file }}
    {% else %}
    gpg --no-default-keyring
    --keyring {{ hpe_mcp_pkgs_keyring_file }}
    --import {{ temp_dir.path }}/{{ item | basename }}
    {% endif %}
  loop: "{{ hpe_mcp_pkgs_key_files }}"
  loop_control:
    extended: true
    label: "{{ item }}"
  when: not keyring_file.stat.exists
  register: gpg_result
  changed_when: (gpg_result.rc == 0 and 'imported' in gpg_result.stderr) or (gpg_result.rc == 0 and gpg_result.stderr == "")

- name: Add HPE repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by={{ hpe_mcp_pkgs_keyring_file }}] {{ hpe_mcp_pkgs_repo_url }} {{ ansible_distribution_release }}/{{ hpe_project_ver }} non-free"
    state: present
    filename: "{{ hpe_mcp_pkgs_apt_filename }}"

- name: Remove temporary directory
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent
  changed_when: false

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
